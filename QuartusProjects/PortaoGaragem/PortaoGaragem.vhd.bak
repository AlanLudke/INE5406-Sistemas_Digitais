-- Quartus Prime VHDL Template
-- Four-State Moore State Machine

-- A Moore machine's outputs are dependent only on the current state.
-- The output is written only when the state changes.  (State
-- transitions are synchronous.)

library ieee;
use ieee.std_logic_1164.all;

entity PortaoGaragem is

	port(
		clk,reset		 : in	std_logic;
		SA,SF,SO,CR	 : in	std_logic;
		output	 : out	std_logic_vector(1 downto 0)
	);

end entity;

architecture rtl of PortaoGaragem is

	-- Build an enumerated type for the state machine
	type state_type is (ABERTO, ABRINDO, FECHADO, FECHANDO);

	-- Register to hold the current state
	signal state,next_state  : state_type;

begin

	-- Logic to advance to the next state
	process (clk, reset)
	begin
		if reset = '1' then
			state <= s0;
		elsif (rising_edge(clk)) then
			state<=next_state;
		end if;
	end process;

	process (state, SA,SF,SO,CR)
	begin
		case state is
			when ABERTO=>
				if CR='1' then 
					next_state<=FECHANDO;
				end if;
			when ABRINDO=>
				if SA='1' then 
					next_state<=ABERTO;
				end if;
			when FECHADO=>
				if CR='1' then 
					next_state<=ABRINDO;
				end if;
			when FECHANDO=>
				if SO='1' then 
					next_state<=FECHADO;
				end if;
			end case;
	end process;
	
	with state select
		output<= "01" when ABRINDO,
					"10" when FECHANDO,
					"00" when others;

end rtl;
